@thesis{keim2015BA,
  author    = {Keim, Jan},
  doi       = {10.5445/IR/1000142183},
  language  = {german},
  publisher = {{Karlsruher Institut für Technologie (KIT)}},
  title     = {{Identifikation problematischer Substantivierungen in natürlichsprachigen Anforderungsdokumenten}},
  type      = {Abschlussarbeit - Bachelor},
  year      = 2015,
}

@inproceedings{landhaeusser2015,
  author    = {Landhäußer, Mathias and Körner, Sven J. and Tichy, Walter F. and Keim, Jan and Krisch, Jennifer},
  booktitle = {2015 IEEE Second International Workshop on Artificial Intelligence for Requirements Engineering (AIRE)},
  doi       = {10.1109/AIRE.2015.7337623},
  pages     = {1--8},
  title     = {{DeNom: a tool to find problematic nominalizations using NLP}},
  year      = 2015,
}

@mastersthesis{keim2018MA,
  author   = {Keim, Jan},
  doi      = {10.5445/IR/1000086946},
  language = {german},
  school   = {Karlsruher Institut für Technologie (KIT)},
  title    = {{Themenextraktion zur Domänenauswahl für Programmierung in natürlicher Sprache}},
  year     = 2018,
}

@inproceedings{keim2019,
  author    = {Keim, Jan and Koziolek, Anne},
  booktitle = {2019 IEEE International Conference on Software Architecture Companion (ICSA-C)},
  doi       = {10.1109/ICSA-C.2019.00052},
  pages     = {250--253},
  title     = {{Towards Consistency Checking Between Software Architecture and Informal Documentation}},
  year      = 2019,
}

@inproceedings{keim2019ecase,
  author    = {Keim, Jan and Schneider, Yves and Koziolek, Anne},
  booktitle = {2019 IEEE/ACM 2nd International Workshop on Establishing the Community-Wide Infrastructure for Architecture-Based Software Engineering (ECASE)},
  doi       = {10.1109/ECASE.2019.00010},
  pages     = {6--12},
  title     = {{Towards Consistency Analysis between Formal and Informal Software Architecture Artefacts}},
  year      = 2019,
}

@book{reussner2019,
  author    = {Reussner, Ralf and Goedicke, Michael and Hasselbring, Wilhelm and Vogel-Heuser, Birgit and Keim, Jan and M{\"a}rtin, Lukas},
  publisher = {Springer Nature},
  title     = {{Managed Software Evolution}},
  year      = 2019,
}

@inproceedings{weigelt2019,
  author    = {Weigelt, Sebastian and Keim, Jan and Hey, Tobias and Tichy, Walter F.},
  booktitle = {2019 IEEE International Conference on Humanized Computing and Communication (HCC)},
  doi       = {10.1109/HCC46620.2019.00014},
  pages     = {38--45},
  title     = {{Unsupervised Multi-Topic Labeling for Spoken Utterances}},
  year      = 2019,
}

@inproceedings{hey2020,
  author    = {Hey, Tobias and Keim, Jan and Koziolek, Anne and Tichy, Walter F.},
  booktitle = {2020 IEEE 28th International Requirements Engineering Conference (RE)},
  doi       = {10.1109/RE48521.2020.00028},
  pages     = {169--179},
  title     = {{NoRBERT: Transfer Learning for Requirements Classification}},
  year      = 2020,
}

@inproceedings{keim2020bert,
  author       = {Keim, Jan and Kaplan, Angelika and Koziolek, Anne and Mirakhorli, Mehdi},
  booktitle    = {European Conference on Software Architecture},
  organization = {Springer},
  pages        = {220--228},
  title        = {{Does BERT Understand Code?-- An Exploratory Study On The Detection Of Architectural Tactics In Code}},
  year         = 2020,
}

@techreport{keim2020bertTR,
  author      = {Keim, Jan and Kaplan, Angelika and Koziolek, Anne and Mirakhorli, Mehdi},
  doi         = {10.5445/IR/1000121031},
  institution = {{Karlsruher Institut für Technologie (KIT)}},
  issn        = {2190-4782},
  keywords    = {Software Architecture, architectural tactics, natural language processing, transfer learning, traceability, language modeling, BERT},
  language    = {english},
  number      = 2,
  series      = {Karlsruhe Reports in Informatics},
  title       = {{Using BERT for the Detection of Architectural Tactics in Code}},
  volume      = 2020,
  year        = 2020,
}

@article{weigelt2020journal,
  author    = {Sebastian Weigelt and Jan Keim and Tobias Hey and Walter F Tichy},
  doi       = {10.35708/HCC1868-126364},
  issn      = {2641-953X},
  journal   = {{International Journal of Humanized Computing and Communication (IJHCC)}},
  number    = 1,
  pages     = {43–66},
  publisher = {KS Press, Institute for Semantic Computing Foundation},
  title     = {{What's the Matter? Knowledge Acquisition by Unsupervised Multi-Topic Labeling for Spoken Utterances}},
  volume    = 1,
  year      = 2020,
}

@inproceedings{kaplan2020teaching,
  author    = {Kaplan, Angelika and Keim, Jan and Schneider, Yves and Walter, Maximilian and Werle, Dominik and Koziolek, Anne and Reussner, Ralf},
  booktitle = {SEUH},
  pages     = {2--6},
  title     = {Teaching Programming at Scale.},
  year      = {2020},
}

@inproceedings{hey21mwsd,
  author    = {Hey, Tobias and Keim, Jan and Tichy, Walter F.},
  booktitle = {2021 IEEE 29th International Requirements Engineering Conference Workshops (REW)},
  doi       = {10.1109/REW53955.2021.00017},
  pages     = {70--76},
  title     = {{Knowledge-based Sense Disambiguation of Multiword Expressions in Requirements Documents}},
  year      = 2021,
}

@inproceedings{kaplan21Towards,
  address   = {New York, NY, USA},
  author    = {Kaplan, Angelika and Keim, Jan},
  booktitle = {Evaluation and Assessment in Software Engineering},
  doi       = {10.1145/3463274.3463358},
  isbn      = 9781450390538,
  keywords  = {text classification, scholarly knowledge communication, Research knowledge organization and management, NLP, information extraction, neural machine learning},
  location  = {Trondheim, Norway},
  numpages  = 6,
  pages     = {347–352},
  publisher = {Association for Computing Machinery},
  series    = {EASE 2021},
  title     = {{Towards an Automated Classification Approach for Software Engineering Research}},
  url       = {https://doi.org/10.1145/3463274.3463358},
  year      = 2021,
}

@inproceedings{keim2021ecsa,
  address   = {Cham},
  author    = {Keim, Jan and Schulz, Sophie and Fuch{\ss}, Dominik and Kocher, Claudius and Speit, Janek and Koziolek, Anne},
  booktitle = {Software Architecture},
  doi       = {10.1007/978-3-030-86044-8_7},
  editor    = {Biffl, Stefan and Navarro, Elena and L{\"o}we, Welf and Sirjani, Marjan and Mirandola, Raffaela and Weyns, Danny},
  isbn      = {978-3-030-86044-8},
  pages     = {101--116},
  publisher = {Springer International Publishing},
  title     = {{Tracelink Recovery for Software Architecture Documentation}},
  year      = 2021,
}

@inproceedings{fuchss2022msr4sa,
  author    = {Fuch\ss{}, Dominik and Corallo, Sophie and Keim, Jan and Speit, Janek and Koziolek, Anne},
  booktitle = {2nd International Workshop on Mining Software Repositories for Software Architecture - Co-located with 16th European Conference on Software Architecture},
  doi       = {10.5445/IR/1000151962},
  title     = {{Establishing a Benchmark Dataset for Traceability Link Recovery between Software Architecture Documentation and Models}},
  year      = 2022,
}

@inproceedings{kaplan2022,
  address   = {New York, NY, USA},
  author    = {Kaplan, Angelika and K\"{u}hn, Thomas and Hahner, Sebastian and Benkler, Niko and Keim, Jan and Fuch\ss{}, Dominik and Corallo, Sophie and Heinrich, Robert},
  booktitle = {Proceedings of the International Conference on Evaluation and Assessment in Software Engineering 2022},
  doi       = {10.1145/3530019.3535305},
  isbn      = 9781450396134,
  keywords  = {taxonomies, evaluation, meta-research in software engineering},
  location  = {Gothenburg, Sweden},
  numpages  = 6,
  pages     = {311–316},
  publisher = {Association for Computing Machinery},
  series    = {EASE '22},
  title     = {{Introducing an Evaluation Method for Taxonomies}},
  url       = {https://doi.org/10.1145/3530019.3535305},
  year      = 2022,
}

@techreport{keim2022taxonomy,
  author   = {Keim, Jan and Hey, Tobias and Sauer, Bjarne and Koziolek, Anne},
  doi      = {10.5445/IR/1000149966},
  language = {english},
  title    = {{A Taxonomy for Design Decisions in Software Architecture Documentation}},
  year     = 2022,
}

@inproceedings{konersmann2022,
  author    = {Konersmann, Marco and Kaplan, Angelika and Kühn, Thomas and Heinrich, Robert and Koziolek, Anne and Reussner, Ralf and Jürjens, Jan and al-Doori, Mahmood and Boltz, Nicolas and Ehl, Marco and Fuchs, Dominik and Groser, Katharina and Hahner, Sebastian and Keim, Jan and Lohr, Matthias and Sağlam, Timur and Schulz, Sophie and Töberg, Jan-Philipp},
  booktitle = {2022 IEEE 19th International Conference on Software Architecture (ICSA)},
  doi       = {10.1109/ICSA53651.2022.00023},
  pages     = {157--168},
  title     = {{Evaluation Methods and Replicability of Software Architecture Research Objects}},
  year      = 2022,
}

@inproceedings{konersmann2022replication,
  author    = {Konersmann, Marco and Kaplan, Angelika and Kühn, Thomas and Heinrich, Robert and Koziolek, Anne and Reussner, Ralf and Jürjens, Jan and Al-Doori, Mahmood and Boltz, Nicolas and Ehl, Marco and Fuchß, Dominik and Großer, Katharina and Hahner, Sebastian and Keim, Jan and Lohr, Matthias and Sağlam, Timur and Schulz, Sophie and Töberg, Jan-Philipp},
  booktitle = {2022 IEEE 19th International Conference on Software Architecture Companion (ICSA-C)},
  doi       = {10.1109/ICSA-C54293.2022.00021},
  pages     = {58--58},
  title     = {{Replication Package of "Evaluation Methods and Replicability of Software Architecture Research Objects"}},
  year      = 2022,
}

@inproceedings{keim2023icsa,
  author    = {Keim, Jan and Corallo, Sophie and Fuchß, Dominik and Koziolek, Anne},
  booktitle = {2023 IEEE 20th International Conference on Software Architecture (ICSA)},
  doi       = {10.1109/ICSA56044.2023.00021},
  number    = {},
  pages     = {141-152},
  title     = {Detecting Inconsistencies in Software Architecture Documentation Using Traceability Link Recovery},
  volume    = {},
  year      = {2023},
}

@inproceedings{kirschner2023,
  abstract  = {Evolving system architectures can be complex and difficult to understand, leading to problems such as poor maintainability. Automated reverse engineering of system structure models from source code can mitigate these problems and facilitate architectural decisions. However, identifying components with their interfaces can be challenging because components are often implemented in different frameworks and interconnected in complex ways. Our approach aims to create software models using reusable concept descriptions for reverse engineering. We use structural-level mapping rules to reconstruct the static system structure from source code, assuming that the technology used can determine the components with their interfaces and deployment. We evaluate our approach on four public reference systems. The analyses show that technology-specific rules already provide good results, but the addition of project-specific rules further improves reverse engineering.},
  address   = {Cham},
  author    = {Kirschner, Yves R.
               and Keim, Jan
               and Peter, Nico
               and Koziolek, Anne},
  booktitle = {Software Architecture},
  editor    = {Tekinerdogan, Bedir
               and Trubiani, Catia
               and Tibermacine, Chouki
               and Scandurra, Patrizia
               and Cuesta, Carlos E.},
  isbn      = {978-3-031-42592-9},
  pages     = {283--291},
  publisher = {Springer Nature Switzerland},
  title     = {Automated Reverse Engineering of the Technology-Induced Software System Structure},
  year      = {2023},
}

@inproceedings{Keim2024SE,
  author          = {Keim, Jan and Corallo, Sophie and Fuchß, Dominik and Koziolek, Anne},
  booktitle       = {Software Engineering 2024 (SE 2024). Ed.: R. Rabiser},
  doi             = {10.18420/sw2024_37},
  eventdate       = {2024-02-26/2024-03-01},
  eventtitle      = {Software Engineering},
  eventtitleaddon = {SE 2024},
  isbn            = {978-3-88579-737-1},
  keywords        = {Inconsistency Detection, Traceability Link Recovery, Consistency, Documentation, Software architecture, Software engineering},
  language        = {english},
  note            = {46.23.01; LK 01},
  pages           = {119-120},
  publisher       = {{Gesellschaft für Informatik e.V.}},
  series          = {Lecture notes in informatics : Proceedings},
  title           = {Detecting Inconsistencies in Software Architecture Documentation Using Traceability Link Recovery},
  venue           = {Linz, Österreich},
  year            = {2024},
}

@inproceedings{Keim2024icse,
  author          = {Keim, Jan and Corallo, Sophie and Fuchß, Dominik and Hey, Tobias and Telge, Tobias and Koziolek, Anne},
  booktitle       = {Proceedings of 46th International Conference on Software Engineering (ICSE 2024)},
  eventdate       = {2024-04-14/2024-04-20},
  eventtitle      = {46th International Conference on Software Engineering},
  eventtitleaddon = {ICSE 2024},
  keywords        = {software traceability, software architecture, documentation, transitive links, intermediate artifacts, information retrieval},
  language        = {english},
  title           = {Recovering Trace Links Between Software Documentation And Code},
  venue           = {Lissabon, Portugal},
  year            = {2024},
}


@inproceedings{Hey2024_RequirementsClassificationForTLR,
  author          = {Hey, Tobias and Keim, Jan and Corallo, Sophie},
  booktitle       = {2024 IEEE 32nd International Requirements Engineering Conference (RE'24)},
  eventdate       = {2024-06-24/2024-06-28},
  eventtitle      = {32nd IEEE International Requirements Engineering Conference},
  eventtitleaddon = {RE 2024},
  keywords        = {Requirements Classification, Traceability Link Recovery, Requirements Engineering, Machine Learning, Information Retrieval, Language Model},
  language        = {english},
  publisher       = {{Institute of Electrical and Electronics Engineers (IEEE)}},
  title           = {Requirements Classification for Traceability Link Recovery},
  venue           = {Reykjavík, Island},
  year            = {2024},
}

@article{kaplan2024combining,
  author = {Kaplan, Angelika and Keim, Jan and Schneider, Marco and Koziolek, Anne and Reussner, Ralf},
  title  = {Combining Knowledge Graphs and Large Language Models to Ease Knowledge Access in Software Architecture Research},
  year   = {2024},
}

@inproceedings{fuchss_enabling_2025,
  author          = {Fuchß, Dominik and Liu, Haoyu and Hey, Tobias and Keim, Jan and Koziolek, Anne},
  booktitle       = {2025 IEEE 22nd International Conference on Software Architecture (ICSA)},
  eventdate       = {2025-03-31/2025-04-04},
  eventtitle      = {22nd IEEE International Conference on Software Architecture},
  eventtitleaddon = {ICSA 2025},
  keywords        = {Traceability Link Recovery, Large Language Models, Software Architecture, Model Extraction},
  language        = {english},
  publisher       = {{Institute of Electrical and Electronics Engineers (IEEE)}},
  title           = {{Enabling Architecture Traceability by LLM-based Architecture Component Name Extraction}},
  venue           = {Odense, Denmark},
  year            = {2025},
}

@inproceedings{fuchss_lissa_2025,
  author    = {Fuchß, Dominik and Hey, Tobias and Keim, Jan and Liu, Haoyu and Ewald, Niklas and Thirolf, Tobias and Koziolek, Anne},
  booktitle = {Proceedings of the IEEE/ACM 47th International Conference on Software Engineering},
  doi       = {10.1109/ICSE55347.2025.00186},
  location  = {Ottawa, Canada},
  publisher = {{Institute of Electrical and Electronics Engineers (IEEE)}},
  series    = {ICSE '25},
  title     = {{LiSSA: Toward Generic Traceability Link Recovery through Retrieval-Augmented Generation}},
  year      = {2025},
}

@inproceedings{hey_requirements_2025,
  address   = {Cham},
  author    = {Hey, Tobias and Fuchß, Dominik and Keim, Jan and Koziolek, Anne},
  booktitle = {{Requirements Engineering: Foundation for Software Quality}},
  publisher = {Springer},
  title     = {{Requirements Traceability Link Recovery via Retrieval-Augmented Generation}},
  year      = {2025},
}

@inproceedings{KaplanKeimGreiner2025,
  author          = {Kaplan, Angelika and Keim, Jan and Greiner, Lukas and Sieger, Ralf and Mirandola, Raffaela and Reussner, Ralf},
  booktitle       = {Proceedings of the 2025 \{IEEE/ACM\} 47th International Conference on Software Engineering: Companion Proceedings, \{ICSE\} Companion 2025, Ottawa, 27th April - 3rd May 2025},
  eventdate       = {2025-04-27/2025-05-03},
  eventtitle      = {International Conference on Software Engineering},
  eventtitleaddon = {ICSE 2025},
  isbn            = {979-8-3315-0569-1},
  issn            = {1558-1225},
  keywords        = {Green AI, sustainability metrics, energy consumption, natural language processing, text classification},
  language        = {english},
  title           = {Responsible and Sustainable AI: Considering Energy Consumption in Automated Text Classification Evaluation Tasks},
  venue           = {Ottawa, Kanada},
  year            = {2025},
}

@phdthesis{Keim2025,
  author    = {Keim, Jan},
  doi       = {10.5445/IR/1000179534},
  keywords  = {Traceability Link Recovery, Software Architecture, Software Engineering, Large Language Models, Inconsistency Detection},
  language  = {english},
  pagetotal = {297},
  publisher = {{Karlsruher Institut für Technologie (KIT)}},
  school    = {Karlsruher Institut für Technologie (KIT)},
  title     = {Recovering Trace Links In Software Architecture Documentation},
  year      = {2025},
}

@inproceedings{SolimanKeim2025,
  author          = {Soliman, Mohamed and Keim, Jan},
  booktitle       = {22nd IEEE International Conference on Software Architecture (ICSA 2025)},
  eventdate       = {2025-03-31/2025-04-04},
  eventtitle      = {22nd IEEE International Conference on Software Architecture},
  eventtitleaddon = {ICSA 2025},
  keywords        = {Architecture knowledge, Architecture design decisions, Large Language Models, GPT},
  language        = {english},
  publisher       = {{Institute of Electrical and Electronics Engineers (IEEE)}},
  title           = {Do Large Language Models Contain Software Architectural Knowledge? An Exploratory Case Study with GPT},
  venue           = {Ottensee, Dänemark},
  year            = {2025},
}
